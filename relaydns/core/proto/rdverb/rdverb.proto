syntax = "proto3";

package rdverb;

import "relaydns/core/proto/rdsec/rdsec.proto";

option go_package = "github.com/gosuda/relaydns/relaydns/core/proto/rdverb;rdverb";

enum PacketType {
  PACKET_TYPE_RELAY_INFO_REQUEST = 0;
  PACKET_TYPE_RELAY_INFO_RESPONSE = 1;

  PACKET_TYPE_LEASE_UPDATE_REQUEST = 2; // Authenticated
  PACKET_TYPE_LEASE_UPDATE_RESPONSE = 3;

  PACKET_TYPE_LEASE_DELETE_REQUEST = 4; // Authenticated
  PACKET_TYPE_LEASE_DELETE_RESPONSE = 5;

  PACKET_TYPE_CONNECTION_REQUEST = 6;
  PACKET_TYPE_CONNECTION_RESPONSE = 7;
}

enum ResponseCode {
  RESPONSE_CODE_UNKNOWN = 0;
  RESPONSE_CODE_ACCEPTED = 1;

  RESPONSE_CODE_INVALID_EXPIRES = 2;
  RESPONSE_CODE_INVALID_IDENTITY = 3;
  RESPONSE_CODE_INVALID_NAME = 4;
  RESPONSE_CODE_INVALID_ALPN = 5;

  RESPONSE_CODE_REJECTED = 6;
}

message Packet {
  PacketType type = 1;
  bytes payload = 2;
}

message RelayInfo {
  rdsec.Identity identity = 1;
  repeated string address = 2;
  repeated string leases = 3;
}

message RelayInfoRequest {}

message RelayInfoResponse {
  RelayInfo relay_info = 1;
}

message Lease {
  rdsec.Identity identity = 1;
  int64 expires = 2;
  string name = 3;
  repeated string alpn = 4;
}

message LeaseUpdateRequest {
  Lease lease = 1;
  bytes nonce = 2;
  int64 timestamp = 3;
}

message LeaseUpdateResponse {
  ResponseCode code = 1;
}

message LeaseDeleteRequest {
  rdsec.Identity identity = 1;
  bytes nonce = 2;
  int64 timestamp = 3;
}

message LeaseDeleteResponse {
  ResponseCode code = 1;
}

message ConnectionRequest {
  string lease_id = 1;
  rdsec.Identity client_identity = 2;
}

message ConnectionResponse {
  ResponseCode code = 1;
}
